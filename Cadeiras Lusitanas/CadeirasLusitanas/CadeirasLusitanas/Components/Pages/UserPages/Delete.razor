@page "/users/delete"
@using Microsoft.EntityFrameworkCore
@using CadeirasLusitanas.Models.Entities
@inject IDbContextFactory<CadeirasLusitanas.Data.CadeirasLusitanasContext> DbFactory
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Authorization
@attribute [StreamRendering]
@attribute [Authorize(Roles = "ADMIN")]

<style>
    .modal {
        left: 27%;
    }

    .row {
        background-color: #E9E9E8;
        padding: 1%;
        width: 100%;
        font-size: 1.5rem; /* Texto maior */
        padding-left: 26%;
    }

        .row .form-control:focus {
            background-color: white;
        }

    h1 {
        font-weight: 800;
        font-size: 1.8rem;
        padding-left: 2%;
    }

</style>

<PageTitle>Remover Utilizador</PageTitle>
<div>
    <h1>De certeza que pretende remover este utilizador?</h1>
    <hr />
    @if (user is null)
    {
        <p><em>A carregar...</em></p>
    }
    else
    {
        <div class="container" style="background-color: #E9E9E8;
        border: 3px solid #4a4a4a;height : 75vh; padding :2%; text-align:center;justify-content:center;">
            <dl class="row">
                <dt class="col-sm-2">E-mail</dt>
                <dd class="col-sm-10">@user.email</dd>
                <dt class="col-sm-2">Tipo</dt>
                <dd class="col-sm-10">@user.type</dd>
            </dl>
            <EditForm method="post" Model="user" OnValidSubmit="DeleteUser" FormName="delete" Enhance>
                <div style="position:fixed; bottom: 35%;text-align: center; width: 100%;transform: translateX(-15%);">
                    <button type="submit" class="btn btn-danger" style="background-color: black; color: white; width: 21%; height: 20%; font-size: 1.5rem; border-radius: 8px;"
                            onmouseover="this.style.backgroundColor='red'; this.style.color='white';"
                            onmouseout="this.style.backgroundColor='black'; this.style.color='white';">
                        Remover
                    </button>
                    <a href="/users" style="display: inline-block;">Voltar</a>
                </div>
            </EditForm>
        </div>

    }
</div>

@code {
    private User? user;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        user = await context.User.FirstOrDefaultAsync(m => m.Id == Id);

        if (user is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteUser()
    {
        using var context = DbFactory.CreateDbContext();
        context.User.Remove(user!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
