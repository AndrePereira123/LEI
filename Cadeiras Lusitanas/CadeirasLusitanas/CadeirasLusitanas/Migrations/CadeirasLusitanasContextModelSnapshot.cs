// <auto-generated />
using CadeirasLusitanas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CadeirasLusitanas.Migrations
{
    [DbContext(typeof(CadeirasLusitanasContext))]
    partial class CadeirasLusitanasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CadeirasLusitanas.Models.Entities.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("custo")
                        .HasColumnType("real")
                        .HasColumnName("Custo");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Descrição");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("Nome");

                    b.Property<float>("peso")
                        .HasColumnType("real")
                        .HasColumnName("Peso");

                    b.Property<int>("stock")
                        .HasColumnType("int")
                        .HasColumnName("Stock");

                    b.Property<string>("tempo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Tempo");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("Tipo");

                    b.Property<int>("visible")
                        .HasColumnType("int")
                        .HasColumnName("Visível");

                    b.HasKey("Id");

                    b.ToTable("Component");
                });

            modelBuilder.Entity("CadeirasLusitanas.Models.Entities.InstanciaDeProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("Estado");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Progresso")
                        .HasColumnType("int")
                        .HasColumnName("Progresso");

                    b.Property<float>("Tempo")
                        .HasColumnType("real")
                        .HasColumnName("Tempo");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("InstanciaDeProduto");
                });

            modelBuilder.Entity("CadeirasLusitanas.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("custo")
                        .HasColumnType("real")
                        .HasColumnName("Custo");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Descrição");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("Nome");

                    b.Property<int>("numeroRodas")
                        .HasColumnType("int")
                        .HasColumnName("Número_Rodas");

                    b.Property<float>("peso")
                        .HasColumnType("real")
                        .HasColumnName("Peso");

                    b.Property<int>("stock")
                        .HasColumnType("int")
                        .HasColumnName("Stock");

                    b.Property<int>("visible")
                        .HasColumnType("int")
                        .HasColumnName("Visível");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("CadeirasLusitanas.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("email");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("password");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ComponentProduct", b =>
                {
                    b.Property<int>("ComponentsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("ComponentsId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("ProductHasComponent", (string)null);
                });

            modelBuilder.Entity("ComponentProduct", b =>
                {
                    b.HasOne("CadeirasLusitanas.Models.Entities.Component", null)
                        .WithMany()
                        .HasForeignKey("ComponentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CadeirasLusitanas.Models.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
